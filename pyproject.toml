[project]
name = "coatopt"
description = "optimise coating layers"
version = "0.0.2"
readme = "README.rst"
authors = [
    { name = "Joseph Bayley", email = "joseph.bayley@glasgow.ac.uk" }
]
requires-python = ">=3.9"
dependencies = [
    "torch>=2.0.0",
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "tmm",
    "pandas>=1.3.0",
    "tmm_fast",
    "numba>=0.56.0",
    "mlflow>=2.0.0",
    "pymoo>=0.6.0"
]

[tool.setuptools.packages.find]
where = ["src"]
include = ["coatopt", "coatopt_ui", "coatopt_cli"] 
exclude = ["docs*"]
namespaces = false

[project.optional-dependencies]
dev = [
    "tox",
    "pre-commit",
    "bump2version"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0"
]

[build-system]
requires = ["setuptools>=61", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project.scripts]
coatopt-ui = "coatopt_ui.launch_ui:main"
coatopt-train = "coatopt_cli.train:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
minversion = "7.0"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]